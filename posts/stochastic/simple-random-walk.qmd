---
title: "Stochastic - Python Example of a Random Walk Process"
author: "MLun Wong"
date: "2017-03-12"
categories: [stochastic, python, random, notes]
image: images/1wtoakjk.bmp
---

# Simple Random Walk

Simple random walk is the first step towards learning stochastic process. Essentially, we model a particle (of desired dimension) walking randomly as time (steps) goes by. Both the stride and the direction is random, but it follows a certain distribution.

## Defining the problem

First, let us define the problem formally.

> To implement a 1-D simulation of random walk $S(t)$ within period $t \in T = \{0, 1, 2, \dots, N\}$ in sample space $\omega \in \mathbb{W}$, with discrete stochastic process $X_T = \{X_1, X_2, \dots, X_n \}$ called steps of the random\> walk with the constrain $\text{min} \leq X(t) \leq \text{max}$.

## Formulation

The random walk can be formally defined as follow:

$$S(t) = S_0 + \sum_{t=1}^{n} X_t$$

$S_0$ represents the initial value or start point of the random walk. Also, select that each elements of $X_T$ can take on integer values between -5 and 5. Implementation

This simulation is equivalent to plotting $S(t)$ against $t$.

```{python}
#| cap-location: bottom
#| fig-cap: Random walk demonstration
import numpy as np
import matplotlib.pyplot as plt

# Generate random numbers within the range -5 to 5
# Note that randint(-5, high=6) generate range -5 to 5
N =5100 ; MIN_STEP = -5; MAX_STEP = 6; S_0 = 0; # Define parameters of the simulation
X_T = np.random.randint(MIN_STEP , high=MAX_STEP , size=N+1) # Generate the discrete stochastic process
t = np.linspace(0, N, N+1) # Time domain
S = [S_0 + np.sum(X_T[0:i]) for i in range(N+1)] # Calculate each S(t) of the random walk
plt.plot(t, S, '-') # Plot
```

# 2D Random Flight

Here's an example of a random flight of 1000 steps sampled from a process similar to above, but in 2-dimension.

![Figure showing random walk in 2D, which is commonly referred to as random flight.](images/1wtoakjk.bmp){#fig-random-flight}

# Further Discussions

## Applications

In the 1D example, we select that each elements $X(t) \in X_T, t \in T = \{0, 1, 2, \dots, n\}$ to follows $-5 \leq X(t) \leq 5 \text{ } \forall \text{ } t \in T$. It is, however, possible to introduce various other constrains w.r.t. your own application. By modeling this distribution based on a known particle's path, one might be able to model its future movement. Regratedbly, stochastic process often follows the "exponential error growth" law, meaning a small error will quickly wind up and rendering the prediction unreliable. But at least these sort of simulations give us insights into simulating a stochastic simulation, often time it might reflect accurately macroscopic properties even though in a microscopic scale, things are way off.

Regardless, there are many sophisticated method to sample the path, including location dependent distribution of the particle and its surrounding environment.

## Nature of $S$ and $X_T$

It is also worthwhile to note that the position $S$ and step size $X_T$ fulfills also the definition of stochastic process with the state space being different. Considering $S=\{S_0, S_0+T_1, S_0 + T_1 + T_2\}$, you might note that stochastic process is commutative in nature, such that if $T$ is stochastic, $T+X$ is also stochastic regardless of whether $X$ is stochastic or not.