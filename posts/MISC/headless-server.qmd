---
title: "Setting up a headless server"
author: "MLun Wong"
date: "2024-01-09"
categories: [code, server, IT, opencl, xrdp]
image: "img/headless_server.png"
---


# Introduction

This post is compiled from a list of steps which makes it possible to set up a headless server with nvidia GPU driver and glx support. The system is tested on Ubuntu 16.04 with nvidia-375.2 driver installed manually.
Setting up XRDP

# Install xrdp

```bash
sudo apt-get install xrdp
```

Configure `~/.xsession` so the only content is:

`xfce-session`

Configure `~/etc/xrdp/startwm.sh`, append following to the end:

```bash
startxfce4
. /etc/X11/XSession
```

Then restart xrdp

# Compiling VirtualGL from source

## Prerequisite

* libtool
* autoconf
* automake
* cmake-curses-gui

## Installing libjpeg-turbo8

Clone source from Github then cd into directory.

```bash
autoreconf
./configure -prefix=/install/path
make -j 4
make install
sudo ldconfig /install/path/lib
```

::: {.callout-note}
Note that libtool is installed in anaconda, so you should use $ which libtool command to check which binary you are using if you get a version mismatch error here.
:::

## Installing Virtual GL

Clone source from Github  then checkout 2.5.2 version with command $ git checkout -tag 2.5.2. It is recommended to use ccmake to config the project.

```bash
cd /virutalgl/source
mkdir build
cd build;ccmake ..
```

Set the following flags:

```bash
CMAKE_CXX_FLAG=-L/Path/To/libjpeg-turbo8/lib
CMAKE_C_FLAG=-L/Path/To/libjpeg-turbo8/lib
CMAKE_CXX_FLAGS_RELEASE=-O3 -DNDEBUG -fPIC
CMAKE_BUILD_TYPE=Release
```

Then generate project and build, you should finish without any errors.
Setup VirtualGL

The display of X server is configured by the file ```/etc/X11/xorg.conf```, an example is given below:

```bash
# nvidia-xconfig: X configuration file generated by nvidia-xconfig
# nvidia-xconfig:  version 375.66  (buildmeister@swio-display-x86-rhel47-06)  Mon May  1 15:45:32 PDT 2017
Section "DRI"
        Mode 0666
EndSection


Section "ServerLayout"
    Identifier     "Layout0"
    Screen      0  "Screen0" 0 0
    InputDevice    "Keyboard0" "CoreKeyboard"
    InputDevice    "Mouse0" "CorePointer"
EndSection

Section "Files"
EndSection

Section "InputDevice"

    # generated from default
    Identifier     "Mouse0"
    Driver         "mouse"
    Option         "Protocol" "auto"
    Option         "Device" "/dev/psaux"
    Option         "Emulate3Buttons" "no"
    Option         "ZAxisMapping" "4 5"
EndSection

Section "InputDevice"

    # generated from default
    Identifier     "Keyboard0"
    Driver         "kbd"
EndSection

Section "Monitor"
    Identifier     "Monitor0"
    VendorName     "Unknown"
    ModelName      "Unknown"
    HorizSync       28.0 - 33.0
    VertRefresh     43.0 - 72.0
    Option         "DPMS"
EndSection

Section "Device"
    Identifier     "Device0"
    Driver         "nvidia"
    VendorName     "NVIDIA Corporation"
    BoardName      "TITAN Xp"
    Option "Coolbits" "5"
EndSection

Section "Screen"
    Identifier     "Screen0"
    Device         "Device0"
    Monitor        "Monitor0"
    DefaultDepth    24
    Option         "UseDisplayDevice" "None" #This is required for headless computer
    SubSection     "Display"
        Virtual     1920 1080
        Depth       24
    EndSubSection
EndSection
```


# Problems and Solutions

## Ipython input doesn't have any keyboard input

This happens because keyboard was not exported to X11.
Export `QT_XKB_CONFIG_ROOT=/usr/share/X11/xkb`

## Kernel version mis-match

Try rebooting, this happens when you update the driver